Already Familiar with the basics of Wireshark. Add anything that is new to this doc

#----Collection 
1) Any basic system w/ Wireshark installed will see unicast traffic destined or sourced from that system. Broadcast traffic is seen and if monitor mode w/ wifi can see all traffic w/o needing to be associated with an AP
2) TAPS - Online or to replicate traffic through a 3rd NIC between 2 other endpoints
3) MAC Floods - Overflow a switch's CAM to ensure it cannot accept any new MAC addresses, then the switch may begin broadcasting everything. 
4) ARP Poison - Poision host's ARP cache to associate monitoring system's MAC w/ the IP of a commonly communicated device used by the target 

#----Filtering
We know all this already. Basic boolean logic syntax
&& || == != > < () etc. etc.
- Right-click fields to create filters based on that specific field if needed


#----HTTPS
TLS handshake
1) Client sends "Hello" w/ Cipher suites supported + a client random num 
2) Svr replies w/ Server "hello" w/ a random value, chosen cipher suite & the server's SSL Cert/pub key
3) Client verifies w/ CA, revocation lists etc. 
4) Client uses Pub. K from SSL Cert to encrypted Premaster key and send to svr. Only svr's priv. k can decrypt 
5) Svr decrypts premaster key. Both client & svr create symm. key from premaster + random numbers. Symm. Key exchange has succeeded, using pub. k. cryptography as a medium
6) Application Data sent

Decrypting if we have key:
1) Edit > Pref > Protocols > TLS > Fill in options (port=start_tls, protocol=http)
